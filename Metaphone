import java.util.*;
//import java.awt.List;
import java.io.*;

/*class to find metaphones. this is based on the metaphone rules given in Wikipedia page of Metaphone*/
	class Metaphone{
  
		/*method to simplify the given word using metaphone rules*/	
		static String find_Metaphones(String word) //main method where we use the rules to find metaphones
		{
			String tempWord="" ;
			word=word.toUpperCase();
			tempWord=word;
			tempWord=reduceDouble(tempWord);
			if(tempWord.substring(0,2).equals("KN")||tempWord.substring(0,2).equals("GN")||tempWord.substring(0,2).equals("PN")||tempWord.substring(0,2).equals("AE")||tempWord.substring(0,2).equals("WR"))
				tempWord=tempWord.substring(1);
			if(tempWord.substring(tempWord.length()-2).equals("MB"))
				tempWord=tempWord.substring(0,tempWord.length()-1);
			
			tempWord=reduceVowels(tempWord); //this has to be last step. do all other reductions based on rule before this.
			return tempWord;
		}
		
		//method to remove duplicate letters except CC
		static String reduceDouble(String word) {
			String tempWord="";
			for(int curi=0;curi<word.length()-1;curi++)
			{
				tempWord+=word.substring(curi,curi+1);
				if(word.substring(curi,curi+1).equals(word.substring(curi+1,curi+2)))
					if(word.substring(curi,curi+1).equals("C")) 
						continue;
					else
						curi++;
			}
			tempWord+=word.substring(word.length()-1);
			return tempWord;
		}
		
		//method to reduce vowels. we have to eliminate all the vowels except if they are the first letter.
		static String reduceVowels(String word) {
			String letter;
			String tempWord=word.substring(0,1);
			for(int curi=1;curi<word.length();curi++) //curi is current letter index
			{
				letter=word.substring(curi,curi+1);
				//System.out.println(letter);
				if(letter.equals("A")||letter.equals("E")||letter.equals("I")||letter.equals("O")||letter.equals("U"))
				{	tempWord=tempWord.concat("A"); //don't add the vowel into new word 
				}
				else
					tempWord+=letter;
			}
			return tempWord;
		}
	}
  
  /*main class where the input is taken and checked initially*/
  public class SpellChecker extends Metaphone{
	    public static HashSet<String> dictionary;
	    String inputWord;
	     public static void main(String []args){
	        System.out.println("starting...");
	        setup();
	        check();
	     }
	     
	     static void setup()
	     {
	        int tableSIZE=13;
	        dictionary = new HashSet<String>(tableSIZE);
	        try {
	            BufferedReader bufferedReader = new BufferedReader(new FileReader("C:\\Users\\ADE152\\Documents\\dictionary.txt"));
	            String line = null; 
	            while((line = bufferedReader.readLine()) != null) {
	                dictionary.add(line);
	            }
	            bufferedReader.close(); //close file        
	        }
	        catch(FileNotFoundException ex) {
	            ex.printStackTrace();//print error             
	        }
	        catch(IOException ex) {
	            ex.printStackTrace();//print error
	        }
	     }
	     
	     static void check()
	     {
	    	String inputWord;
	    	String buffer;
	    	String newMetaphone;
	        Scanner sc=new Scanner(System.in);
	        System.out.println("Enter word :");
	        inputWord=sc.next();
	        //long t1=System.nanoTime();
	        if(dictionary.contains(inputWord))
	            System.out.println("Exists!");
	        else
	        {
	        	System.out.println("Doesn't exist.");
	        	newMetaphone=find_Metaphones(inputWord);
	        	System.out.println(newMetaphone);


	        	
	        }
	        //long t2=System.nanoTime();
        	//System.out.println("time="+(t2-t1));
	     }
	}
